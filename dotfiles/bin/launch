#!/bin/bash
#
# Launch script to easily start programs without having to provide all the arguments
#

print_help() {
	echo -e "Usage:"
	echo -e "\$ $(basename $0) [-r] [-a] [-q] [-h] {program1 ... programN}\tStart programs"
	echo -e " -q\tQuiet mode"
	echo -e " -h\tShow this help text"
}

[ $# -eq 0 ] && { print_help; exit 1; }

while getopts "qh" arg; do
	case $arg in
		q) # Quiet program starts
			quiet=1;;
		h) # Show help text and exit
			print_help
			exit 0;;
		?) # Invalid option
			print_help
			exit 1;;
	esac
done

for arg in "$@" ; do
case $arg in
	xrdb)
		xrdb -merge ~/.Xresources
		;;
	picom)
		killall picom &> /dev/null
		picom -b --experimental-backends
		;;
	bspwm)
		if [ $quiet ] ; then
			"$XDG_CONFIG_HOME/bspwm/bspwmrc" &> /dev/null
		else
			"$XDG_CONFIG_HOME/bspwm/bspwmrc"
		fi
		;;
	sxhkd)
		proc_exists="$(ps aux | grep '[0-9]\ssxhkd')"
		if [ "$proc_exists" ] ; then
			pkill -USR1 -x sxhkd
		else
			sxhkd &
			disown
		fi
		;;
	polybar)
        killall polybar &> /dev/null
		if [ $quiet ] ; then
			polybar main &> /dev/null &
			polybar secondary &> /dev/null &
			polybar tertiary &> /dev/null &
		else
			polybar main &
			polybar secondary &
			polybar tertiary &
		fi
		disown
		;;
	enpass)
		killall Enpass 2&> /dev/null
		if [ $quiet ] ; then
			/usr/bin/enpass &> /dev/null &
		else
			/usr/bin/enpass &
		fi
		disown
		if [ $quiet ] ; then
			res="$(wmctrl -l | grep 'N/A Enpass' | cut -d' ' -f1)"
			while [ -z $res ] ; do
				sleep 0.1
				res="$(wmctrl -l | grep 'N/A Enpass' | cut -d' ' -f1)"
			done
			wmctrl -ic $res
		fi
		;;
	udiskie)
		killall udiskie &> /dev/null
		udiskie --tray &
		disown
		;;
	color)
        alpha=50
		if [ $quiet ] ; then
			wal -R -a $alpha > /dev/null
		else
			wal -R -a $alpha
		fi
		feh --bg-fill "$(cat $XDG_CACHE_HOME/wal/wal)"
		;;
	redshift)
		killall redshift-gtk;
		if [ $quiet ] ; then
			redshift-gtk > /dev/null &
		else
			redshift-gtk &
		fi
		;;
	ibus)
		ibus-daemon -drx
		;;
	hp)
		hp-systray &
		;;
	-*)
		continue;;
	*)
		echo "Unmatched: $arg"
		continue;;
esac
echo "Started $arg"
done
